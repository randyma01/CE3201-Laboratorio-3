module fourBitFullAdder_module
( 
  input logic [3:0] a, 
  input logic [3:0] b,
  output [3:0] flags,
  output [3:0] sVect,
  output [4:0] auxCarry
 );
	
	assign auxCarry[0] = 0; // Sin carryIn
	
	oneBitFullAdder_module adder_1(sVect[0], auxCarry[1], aVect[0], bVect[0], auxCarry[0]);
	oneBitFullAdder_module adder_2(sVect[1], auxCarry[2], aVect[1], bVect[1], auxCarry[1]);
	oneBitFullAdder_module adder_3(sVect[2], auxCarry[3], aVect[2], bVect[2], auxCarry[2]);
	oneBitFullAdder_module adder_4(sVect[3], auxCarry[4], aVect[3], bVect[3], auxCarry[3]);
	
	// Verificar flag negativo (N)
	assign flags[0] = 0;
	
	// Verificar flag cero (Z) -> Si sVect == 0 entonces flags[1] = 1 sino flags[1] = 0
	assign flags[1] = (sVect == 0);
	
	// Verificar flag acarreo (C)
	assign flags[2] = (auxCarry[4] == 1); // auxCarry[4] indica carry
	
	// Verificar flag desbordamiento (V)
	assign flags[3] = (auxCarry[4] == 1);
	
endmodule 