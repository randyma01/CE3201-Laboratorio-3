|top_module
clk => clk.IN2
rst => rst.IN2
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
uc[0] => uc[0].IN1
uc[1] => uc[1].IN1
uc[2] => uc[2].IN1
results[0] << register_out_module:register_out.port3
results[1] << register_out_module:register_out.port3
results[2] << register_out_module:register_out.port3
results[3] << register_out_module:register_out.port3
results[4] << register_out_module:register_out.port3
results[5] << register_out_module:register_out.port3
results[6] << register_out_module:register_out.port3
flags[0] << alu_module:alu.port4
flags[1] << alu_module:alu.port4
flags[2] << alu_module:alu.port4
flags[3] << alu_module:alu.port4


|top_module|register_in_module:register_in
clk => new_b[0]~reg0.CLK
clk => new_b[1]~reg0.CLK
clk => new_b[2]~reg0.CLK
clk => new_b[3]~reg0.CLK
clk => new_a[0]~reg0.CLK
clk => new_a[1]~reg0.CLK
clk => new_a[2]~reg0.CLK
clk => new_a[3]~reg0.CLK
rst => new_b[0]~reg0.ACLR
rst => new_b[1]~reg0.ACLR
rst => new_b[2]~reg0.ACLR
rst => new_b[3]~reg0.ACLR
rst => new_a[0]~reg0.ACLR
rst => new_a[1]~reg0.ACLR
rst => new_a[2]~reg0.ACLR
rst => new_a[3]~reg0.ACLR
a[0] => new_a[0]~reg0.DATAIN
a[1] => new_a[1]~reg0.DATAIN
a[2] => new_a[2]~reg0.DATAIN
a[3] => new_a[3]~reg0.DATAIN
b[0] => new_b[0]~reg0.DATAIN
b[1] => new_b[1]~reg0.DATAIN
b[2] => new_b[2]~reg0.DATAIN
b[3] => new_b[3]~reg0.DATAIN
new_a[0] <= new_a[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_a[1] <= new_a[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_a[2] <= new_a[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_a[3] <= new_a[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_b[0] <= new_b[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_b[1] <= new_b[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_b[2] <= new_b[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_b[3] <= new_b[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_module|alu_module:alu
A[0] => A[0].IN7
A[1] => A[1].IN7
A[2] => A[2].IN7
A[3] => A[3].IN7
B[0] => B[0].IN7
B[1] => B[1].IN7
B[2] => B[2].IN7
B[3] => B[3].IN7
UC[0] => Mux0.IN3
UC[0] => Mux1.IN3
UC[0] => Mux2.IN3
UC[0] => Mux3.IN3
UC[0] => Mux4.IN4
UC[0] => Mux5.IN4
UC[0] => Mux6.IN4
UC[0] => Mux7.IN3
UC[1] => Mux0.IN2
UC[1] => Mux1.IN2
UC[1] => Mux2.IN2
UC[1] => Mux3.IN2
UC[1] => Mux4.IN3
UC[1] => Mux5.IN3
UC[1] => Mux6.IN3
UC[1] => Mux7.IN2
UC[2] => Mux0.IN1
UC[2] => Mux1.IN1
UC[2] => Mux2.IN1
UC[2] => Mux3.IN1
UC[2] => Mux4.IN2
UC[2] => Mux5.IN2
UC[2] => Mux6.IN2
UC[2] => Mux7.IN1
RESULT[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
RESULT[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
RESULT[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
RESULT[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
FLAGS[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
FLAGS[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
FLAGS[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
FLAGS[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE


|top_module|alu_module:alu|nBitAdder_module:adderMod
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
result[0] <= oneBitFullAdder_module:oba0.port3
result[1] <= oneBitFullAdder_module:forloop[1].obaN.port3
result[2] <= oneBitFullAdder_module:forloop[2].obaN.port3
result[3] <= oneBitFullAdder_module:forloop[3].obaN.port3
flags[0] <= always0.DB_MAX_OUTPUT_PORT_TYPE
flags[1] <= flags.DB_MAX_OUTPUT_PORT_TYPE
flags[2] <= <GND>
flags[3] <= <GND>


|top_module|alu_module:alu|nBitAdder_module:adderMod|oneBitFullAdder_module:oba0
a => res.IN0
a => res.IN0
a => res.IN0
a => res.IN0
b => res.IN1
b => res.IN1
b => res.IN1
b => res.IN1
cin => res.IN1
cin => res.IN1
cin => cout.IN1
cin => cout.IN1
cin => res.IN1
cin => res.IN1
cin => cout.IN1
res <= res.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|top_module|alu_module:alu|nBitAdder_module:adderMod|oneBitFullAdder_module:forloop[1].obaN
a => res.IN0
a => res.IN0
a => res.IN0
a => res.IN0
b => res.IN1
b => res.IN1
b => res.IN1
b => res.IN1
cin => res.IN1
cin => res.IN1
cin => cout.IN1
cin => cout.IN1
cin => res.IN1
cin => res.IN1
cin => cout.IN1
res <= res.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|top_module|alu_module:alu|nBitAdder_module:adderMod|oneBitFullAdder_module:forloop[2].obaN
a => res.IN0
a => res.IN0
a => res.IN0
a => res.IN0
b => res.IN1
b => res.IN1
b => res.IN1
b => res.IN1
cin => res.IN1
cin => res.IN1
cin => cout.IN1
cin => cout.IN1
cin => res.IN1
cin => res.IN1
cin => cout.IN1
res <= res.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|top_module|alu_module:alu|nBitAdder_module:adderMod|oneBitFullAdder_module:forloop[3].obaN
a => res.IN0
a => res.IN0
a => res.IN0
a => res.IN0
b => res.IN1
b => res.IN1
b => res.IN1
b => res.IN1
cin => res.IN1
cin => res.IN1
cin => cout.IN1
cin => cout.IN1
cin => res.IN1
cin => res.IN1
cin => cout.IN1
res <= res.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|top_module|alu_module:alu|nBitSubstractor_module:subsMod
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
result[0] <= oneBitFullSubstractor_module:oba0.port3
result[1] <= oneBitFullSubstractor_module:forloop[1].obaN.port3
result[2] <= oneBitFullSubstractor_module:forloop[2].obaN.port3
result[3] <= oneBitFullSubstractor_module:forloop[3].obaN.port3
flags[0] <= always0.DB_MAX_OUTPUT_PORT_TYPE
flags[1] <= <GND>
flags[2] <= flags.DB_MAX_OUTPUT_PORT_TYPE
flags[3] <= <GND>


|top_module|alu_module:alu|nBitSubstractor_module:subsMod|oneBitFullSubstractor_module:oba0
a => res.IN0
a => res.IN0
a => res.IN0
a => res.IN0
a => cout.IN0
b => res.IN1
b => res.IN1
b => cout.IN0
b => cout.IN1
b => res.IN1
b => res.IN1
cin => res.IN1
cin => res.IN1
cin => cout.IN1
cin => res.IN1
cin => res.IN1
res <= res.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|top_module|alu_module:alu|nBitSubstractor_module:subsMod|oneBitFullSubstractor_module:forloop[1].obaN
a => res.IN0
a => res.IN0
a => res.IN0
a => res.IN0
a => cout.IN0
b => res.IN1
b => res.IN1
b => cout.IN0
b => cout.IN1
b => res.IN1
b => res.IN1
cin => res.IN1
cin => res.IN1
cin => cout.IN1
cin => res.IN1
cin => res.IN1
res <= res.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|top_module|alu_module:alu|nBitSubstractor_module:subsMod|oneBitFullSubstractor_module:forloop[2].obaN
a => res.IN0
a => res.IN0
a => res.IN0
a => res.IN0
a => cout.IN0
b => res.IN1
b => res.IN1
b => cout.IN0
b => cout.IN1
b => res.IN1
b => res.IN1
cin => res.IN1
cin => res.IN1
cin => cout.IN1
cin => res.IN1
cin => res.IN1
res <= res.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|top_module|alu_module:alu|nBitSubstractor_module:subsMod|oneBitFullSubstractor_module:forloop[3].obaN
a => res.IN0
a => res.IN0
a => res.IN0
a => res.IN0
a => cout.IN0
b => res.IN1
b => res.IN1
b => cout.IN0
b => cout.IN1
b => res.IN1
b => res.IN1
cin => res.IN1
cin => res.IN1
cin => cout.IN1
cin => res.IN1
cin => res.IN1
res <= res.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|top_module|alu_module:alu|and_module:andMod
a[0] => WideOr0.IN0
a[1] => WideOr0.IN1
a[2] => WideOr0.IN2
a[3] => WideOr0.IN3
b[0] => WideOr1.IN0
b[1] => WideOr1.IN1
b[2] => WideOr1.IN2
b[3] => WideOr1.IN3
result[0] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= <GND>
result[2] <= <GND>
result[3] <= <GND>
flags[0] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
flags[1] <= <GND>
flags[2] <= <GND>
flags[3] <= <GND>


|top_module|alu_module:alu|or_module:orMod
a[0] => WideOr0.IN0
a[1] => WideOr0.IN1
a[2] => WideOr0.IN2
a[3] => WideOr0.IN3
b[0] => WideOr1.IN0
b[1] => WideOr1.IN1
b[2] => WideOr1.IN2
b[3] => WideOr1.IN3
result[0] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= <GND>
result[2] <= <GND>
result[3] <= <GND>
flags[0] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
flags[1] <= <GND>
flags[2] <= <GND>
flags[3] <= <GND>


|top_module|alu_module:alu|xor_module:xorMod
a[0] => result.IN0
a[1] => result.IN0
a[2] => result.IN0
a[3] => result.IN0
b[0] => result.IN1
b[1] => result.IN1
b[2] => result.IN1
b[3] => result.IN1
result[0] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result.DB_MAX_OUTPUT_PORT_TYPE
flags[0] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
flags[1] <= <GND>
flags[2] <= <GND>
flags[3] <= <GND>


|top_module|alu_module:alu|sll_module:sllMod
a[0] => ShiftLeft0.IN4
a[1] => ShiftLeft0.IN3
a[2] => ShiftLeft0.IN2
a[3] => ShiftLeft0.IN1
b[0] => ShiftLeft0.IN8
b[1] => ShiftLeft0.IN7
b[2] => ShiftLeft0.IN6
b[3] => ShiftLeft0.IN5
result[0] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
flags[0] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
flags[1] <= <GND>
flags[2] <= <GND>
flags[3] <= <GND>


|top_module|alu_module:alu|srl_module:srlMod
a[0] => ShiftRight0.IN4
a[1] => ShiftRight0.IN3
a[2] => ShiftRight0.IN2
a[3] => ShiftRight0.IN1
b[0] => ShiftRight0.IN8
b[1] => ShiftRight0.IN7
b[2] => ShiftRight0.IN6
b[3] => ShiftRight0.IN5
result[0] <= ShiftRight0.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= ShiftRight0.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= ShiftRight0.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= ShiftRight0.DB_MAX_OUTPUT_PORT_TYPE
flags[0] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
flags[1] <= <GND>
flags[2] <= <GND>
flags[3] <= <GND>


|top_module|register_out_module:register_out
clk => new_result[0]~reg0.CLK
clk => new_result[1]~reg0.CLK
clk => new_result[2]~reg0.CLK
clk => new_result[3]~reg0.CLK
rst => new_result[0]~reg0.ACLR
rst => new_result[1]~reg0.ACLR
rst => new_result[2]~reg0.ACLR
rst => new_result[3]~reg0.ACLR
result[0] => new_result[0]~reg0.DATAIN
result[1] => new_result[1]~reg0.DATAIN
result[2] => new_result[2]~reg0.DATAIN
result[3] => new_result[3]~reg0.DATAIN
new_result[0] <= new_result[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_result[1] <= new_result[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_result[2] <= new_result[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
new_result[3] <= new_result[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


